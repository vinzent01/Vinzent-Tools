import { UserDefinedProvider, Provider } from "./providers";
/**
 * Utility for typechecking UserDefinedProvider objects
 *
 * @export
 * @param {(UserDefinedProvider | any)} userDefinedProvider - The UserDefinedProvider object to be checked
 * @returns {u is UserDefinedProvider}
 */
export declare function checkIfUserDefinedProvider(userDefinedProvider: UserDefinedProvider | any): userDefinedProvider is UserDefinedProvider;
/**
 * Utility for typechecking Provider objects
 *
 * @export
 * @param {(Provider | any)} provider - The Provider object to be checked
 * @returns {p is Provider}
 */
export declare function checkIfProvider(provider: Provider | any): provider is Provider;
/**
 * Wraps a promise and handles both the resolved value and any potential errors.
 * @param promise - The promise to wrap.
 * @returns A promise that resolves to a tuple containing the error (if any) and the resolved value (if any).
 */
export declare function _to<T, U = Error>(promise: Promise<T>): Promise<[U | null, T | null]>;
